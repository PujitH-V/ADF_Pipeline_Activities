{
	"name": "testing_incr",
	"properties": {
		"activities": [
			{
				"name": "Watermarktable_old_value",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Incremental_testing_lookup_ds",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Watermarktable_old_value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Watermarktable_old_value').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "tablename",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "conctaed_table_name",
								"value": {
									"value": "@concat(item().schema_nam,'.',item().TableName)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Watermarktable_new_value",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "tablename",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(LastModifytime) as NewWaterMarkValue from ',variables('conctaed_table_name'))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "watermark_new_value_dataset",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Watermarktable_new_value",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{variables('conctaed_table_name')} where LastModifytime > '@{item().WatermarkValue}' and LastModifytime <= '@{activity('Watermarktable_new_value').output.firstRow.NewWatermarkvalue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "temp_src_dataset",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Incr_Copy_Sink_ds",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat(item().TableName,'/',item().TableName,'.parquet')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@{activity('Watermarktable_new_value').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "SQL_LinkedService",
								"type": "LinkedServiceReference",
								"parameters": {
									"vvindb": "vvin",
									"testingdb": "testing"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"conctaed_table_name": {
				"type": "String",
				"defaultValue": "xyz.table1"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-06-29T17:49:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}